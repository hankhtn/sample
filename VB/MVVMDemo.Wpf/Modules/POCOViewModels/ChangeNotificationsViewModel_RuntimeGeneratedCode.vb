Imports DevExpress.Mvvm
Imports System.ComponentModel

' This class demonstrates the code that will be generated by the POCO mechanism at runtime

Namespace MVVMDemo.POCOViewModels
    Public Class ChangeNotificationsViewModel_RuntimeGeneratedCode
        Inherits ChangeNotificationsViewModel
        Implements INotifyPropertyChanged

        Public Overrides Property FirstName() As String
           Get
               Return MyBase.FirstName
           End Get
           Set(ByVal value As String)
               If MyBase.FirstName = value Then
                   Return
               End If
               Dim oldValue As String = MyBase.FirstName
               MyBase.FirstName = value
               OnNameChanged()
               RaisePropertyChanged("FirstName")
           End Set
        End Property

        Public Overrides Property LastName() As String
           Get
               Return MyBase.LastName
           End Get
           Set(ByVal value As String)
               If MyBase.LastName = value Then
                   Return
               End If
               Dim oldValue As String = MyBase.LastName
               MyBase.LastName = value
               OnNameChanged()
               RaisePropertyChanged("LastName")
           End Set
        End Property

        Private _RegisterCommand As DelegateCommand
        Public ReadOnly Property RegisterCommand() As DelegateCommand
            Get
                If _RegisterCommand IsNot Nothing Then
                    Return _RegisterCommand
                Else
                    _RegisterCommand = New DelegateCommand(AddressOf Register, AddressOf CanRegister)
                    Return _RegisterCommand
                End If
            End Get
        End Property

        #Region "INotifyPropertyChanged implementation"
        Public Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged

        Private Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim handler = PropertyChangedEvent
            If handler IsNot Nothing Then
                handler(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
        #End Region
    End Class
End Namespace
